// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GraftErr {
    #[prost(enumeration="GraftErrCode", tag="1")]
    pub code: i32,
    #[prost(string, tag="2")]
    pub message: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SegmentInfo {
    #[prost(bytes="bytes", tag="1")]
    pub sid: ::prost::bytes::Bytes,
    #[prost(bytes="bytes", tag="2")]
    pub graft: ::prost::bytes::Bytes,
}
/// A snapshot contains the metadata of a volume at a given LSN.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Snapshot {
    #[prost(bytes="bytes", tag="1")]
    pub vid: ::prost::bytes::Bytes,
    #[prost(bytes="bytes", tag="2")]
    pub cid: ::prost::bytes::Bytes,
    #[prost(uint64, tag="3")]
    pub lsn: u64,
    #[prost(uint64, tag="4")]
    pub checkpoint_lsn: u64,
    #[prost(uint32, tag="5")]
    pub page_count: u32,
    #[prost(message, optional, tag="6")]
    pub timestamp: ::core::option::Option<::prost_types::Timestamp>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Commit {
    #[prost(message, optional, tag="1")]
    pub snapshot: ::core::option::Option<Snapshot>,
    #[prost(message, repeated, tag="2")]
    pub segments: ::prost::alloc::vec::Vec<SegmentInfo>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct LsnRange {
    #[prost(uint64, tag="1")]
    pub inclusive_start: u64,
    #[prost(uint64, optional, tag="2")]
    pub inclusive_end: ::core::option::Option<u64>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum GraftErrCode {
    Unspecified = 0,
    /// Client error codes
    Client = 1,
    SnapshotMissing = 2,
    CommitRejected = 3,
    Unauthorized = 4,
    /// Server error codes
    Server = 100,
    ServiceUnavailable = 101,
}
impl GraftErrCode {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            GraftErrCode::Unspecified => "GRAFT_ERR_CODE_UNSPECIFIED",
            GraftErrCode::Client => "GRAFT_ERR_CODE_CLIENT",
            GraftErrCode::SnapshotMissing => "GRAFT_ERR_CODE_SNAPSHOT_MISSING",
            GraftErrCode::CommitRejected => "GRAFT_ERR_CODE_COMMIT_REJECTED",
            GraftErrCode::Unauthorized => "GRAFT_ERR_CODE_UNAUTHORIZED",
            GraftErrCode::Server => "GRAFT_ERR_CODE_SERVER",
            GraftErrCode::ServiceUnavailable => "GRAFT_ERR_CODE_SERVICE_UNAVAILABLE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GRAFT_ERR_CODE_UNSPECIFIED" => Some(Self::Unspecified),
            "GRAFT_ERR_CODE_CLIENT" => Some(Self::Client),
            "GRAFT_ERR_CODE_SNAPSHOT_MISSING" => Some(Self::SnapshotMissing),
            "GRAFT_ERR_CODE_COMMIT_REJECTED" => Some(Self::CommitRejected),
            "GRAFT_ERR_CODE_UNAUTHORIZED" => Some(Self::Unauthorized),
            "GRAFT_ERR_CODE_SERVER" => Some(Self::Server),
            "GRAFT_ERR_CODE_SERVICE_UNAVAILABLE" => Some(Self::ServiceUnavailable),
            _ => None,
        }
    }
}
// @@protoc_insertion_point(module)
