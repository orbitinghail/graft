// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LocalCheckpointSet {
    /// The etag from the last time we pulled the CheckpointSet, used to only pull
    /// changed CheckpointSets
    #[prost(bytes="bytes", tag="1")]
    pub etag: ::prost::bytes::Bytes,
    /// The list of checkpoint LSNs.
    #[prost(uint64, repeated, tag="2")]
    pub lsns: ::prost::alloc::vec::Vec<u64>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VolumeHandle {
    /// The name of the Volume Handle
    #[prost(string, tag="1")]
    pub name: ::prost::alloc::string::String,
    /// References to the local and remote Volumes, along with LSNs representing
    /// their latest successful synchronization.
    #[prost(message, optional, tag="2")]
    pub local: ::core::option::Option<super::super::remote::v1::VolumeRef>,
    #[prost(message, optional, tag="3")]
    pub remote: ::core::option::Option<super::super::remote::v1::VolumeRef>,
    /// Presence of the pending_commit field means that the Push operation is in
    /// the process of committing to the remote. If no such Push job is currently
    /// running (i.e. it was interrupted), this field must be used to resume or
    /// abort the commit process.
    #[prost(message, optional, tag="4")]
    pub pending_commit: ::core::option::Option<PendingCommit>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PendingCommit {
    /// The resulting remote LSN that the push job is attempting to create
    #[prost(uint64, tag="1")]
    pub remote_lsn: u64,
    /// The associated 256 bit blake3 commit hash. This is used to determine
    /// whether or not the commit has landed in the remote, in the case that we are
    /// interrupted while attempting to push.
    #[prost(bytes="bytes", tag="2")]
    pub commit_hash: ::prost::bytes::Bytes,
}
// @@protoc_insertion_point(module)
