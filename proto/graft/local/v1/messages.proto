syntax = "proto3";
package graft.local.v1;

import "graft/remote/v1/messages.proto";

message LocalCheckpointSet {
  // The etag from the last time we pulled the CheckpointSet, used to only pull
  // changed CheckpointSets
  bytes etag = 1;

  // The list of checkpoint LSNs.
  repeated uint64 lsns = 2;
}

message VolumeHandle {
  // The name of the Volume Handle
  string name = 1;

  // References to the local and remote Volumes, along with LSNs representing
  // their latest successful synchronization.
  graft.remote.v1.VolumeRef local = 2;
  optional graft.remote.v1.VolumeRef remote = 3;

  // Presence of the pending_commit field means that the Push operation is in
  // the process of committing to the remote. If no such Push job is currently
  // running (i.e. it was interrupted), this field must be used to resume or
  // abort the commit process.
  optional PendingCommit pending_commit = 4;
}

message PendingCommit {
  // The resulting remote LSN that the push job is attempting to create
  uint64 remote_lsn = 1;

  // The associated 256 bit blake3 commit hash. This is used to determine
  // whether or not the commit has landed in the remote, in the case that we are
  // interrupted while attempting to push.
  bytes commit_hash = 2;
}
